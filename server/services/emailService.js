import nodemailer from 'nodemailer';

// Configuration du transporteur email
let transporter = null;

const initializeTransporter = () => {
  if (!transporter) {
    // Utiliser directement process.env au lieu de useRuntimeConfig pour √©viter les probl√®mes de contexte
    transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: parseInt(process.env.SMTP_PORT),
      secure: false, // true pour 465, false pour autres ports
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS,
      },
    });
  }
  return transporter;
};

// Fonction pour envoyer un email de confirmation de r√©servation √† l'√©tudiant
export const sendBookingConfirmationToStudent = async (booking) => {
  try {
    const transporter = initializeTransporter();
    
    const mailOptions = {
      from: process.env.SMTP_FROM,
      to: booking.studentId.email,
      subject: '‚úÖ Votre cours a √©t√© confirm√© - Academ',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #7c3aed;">Votre cours a √©t√© confirm√© !</h2>
          
          <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3>D√©tails de votre cours :</h3>
            <p><strong>Professeur :</strong> ${booking.teacherId.firstName} ${booking.teacherId.lastName}</p>
            <p><strong>Mati√®re :</strong> ${booking.subjectId.name}</p>
            <p><strong>Date :</strong> ${new Date(booking.startTime).toLocaleDateString('fr-FR', { 
              weekday: 'long', 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</p>
            <p><strong>Horaire :</strong> ${new Date(booking.startTime).toLocaleTimeString('fr-FR', { 
              hour: '2-digit', 
              minute: '2-digit' 
            })} - ${new Date(booking.endTime).toLocaleTimeString('fr-FR', { 
              hour: '2-digit', 
              minute: '2-digit' 
            })}</p>
            <p><strong>Dur√©e :</strong> ${booking.duration} minutes</p>
            <p><strong>Montant pay√© :</strong> ${booking.totalAmount}‚Ç¨</p>
          </div>

          ${booking.studentNotes ? `
            <div style="background-color: #fef3c7; padding: 15px; border-radius: 8px; margin: 20px 0;">
              <h4>Vos notes :</h4>
              <p>${booking.studentNotes}</p>
            </div>
          ` : ''}

          <div style="margin: 30px 0; text-align: center;">
            <a href="${process.env.BASE_URL}/dashboard" 
               style="background-color: #7c3aed; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
              Voir mes cours
            </a>
          </div>

          <hr style="margin: 30px 0; border: none; border-top: 1px solid #e5e7eb;">
          
          <p style="color: #6b7280; font-size: 14px;">
            Vous pouvez annuler ce cours gratuitement jusqu'√† 24h avant l'heure pr√©vue.
            <br><br>
            Pour toute question, contactez-nous √† l'adresse : ${process.env.SMTP_FROM}
          </p>
        </div>
      `,
      text: `
Votre cours a √©t√© confirm√© !

D√©tails de votre cours :
- Professeur : ${booking.teacherId.firstName} ${booking.teacherId.lastName}
- Mati√®re : ${booking.subjectId.name}
- Date : ${new Date(booking.startTime).toLocaleDateString('fr-FR')}
- Horaire : ${new Date(booking.startTime).toLocaleTimeString('fr-FR')} - ${new Date(booking.endTime).toLocaleTimeString('fr-FR')}
- Dur√©e : ${booking.duration} minutes
- Montant pay√© : ${booking.totalAmount}‚Ç¨

${booking.studentNotes ? `Vos notes : ${booking.studentNotes}` : ''}

Consultez vos cours sur : ${process.env.BASE_URL}/dashboard

Vous pouvez annuler ce cours gratuitement jusqu'√† 24h avant l'heure pr√©vue.
      `
    };

    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email de confirmation √©tudiant envoy√©: ${result.messageId}`);
    return result;
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'envoi de l\'email √† l\'√©tudiant:', error);
    throw error;
  }
};

// Fonction pour envoyer une notification de nouvelle r√©servation au professeur
export const sendBookingNotificationToTeacher = async (booking) => {
  try {
    const transporter = initializeTransporter();
    
    const mailOptions = {
      from: process.env.SMTP_FROM,
      to: booking.teacherId.email,
      subject: 'üìö Nouvelle r√©servation de cours - Academ',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #7c3aed;">Nouvelle r√©servation confirm√©e !</h2>
          
          <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3>D√©tails du cours :</h3>
            <p><strong>√âtudiant :</strong> ${booking.studentId.firstName} ${booking.studentId.lastName}</p>
            <p><strong>Email √©tudiant :</strong> ${booking.studentId.email}</p>
            <p><strong>Mati√®re :</strong> ${booking.subjectId.name}</p>
            <p><strong>Date :</strong> ${new Date(booking.startTime).toLocaleDateString('fr-FR', { 
              weekday: 'long', 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</p>
            <p><strong>Horaire :</strong> ${new Date(booking.startTime).toLocaleTimeString('fr-FR', { 
              hour: '2-digit', 
              minute: '2-digit' 
            })} - ${new Date(booking.endTime).toLocaleTimeString('fr-FR', { 
              hour: '2-digit', 
              minute: '2-digit' 
            })}</p>
            <p><strong>Dur√©e :</strong> ${booking.duration} minutes</p>
            <p><strong>Votre r√©mun√©ration :</strong> ${booking.teacherAmount}‚Ç¨</p>
          </div>

          ${booking.studentNotes ? `
            <div style="background-color: #ecfdf5; padding: 15px; border-radius: 8px; margin: 20px 0;">
              <h4>Notes de l'√©tudiant :</h4>
              <p>${booking.studentNotes}</p>
            </div>
          ` : ''}

          <div style="margin: 30px 0; text-align: center;">
            <a href="${process.env.BASE_URL}/teacher/bookings" 
               style="background-color: #7c3aed; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
              Voir mes cours
            </a>
          </div>

          <hr style="margin: 30px 0; border: none; border-top: 1px solid #e5e7eb;">
          
          <p style="color: #6b7280; font-size: 14px;">
            Pr√©parez votre cours et n'h√©sitez pas √† contacter l'√©tudiant si n√©cessaire.
            <br><br>
            Pour toute question, contactez-nous √† l'adresse : ${process.env.SMTP_FROM}
          </p>
        </div>
      `,
      text: `
Nouvelle r√©servation confirm√©e !

D√©tails du cours :
- √âtudiant : ${booking.studentId.firstName} ${booking.studentId.lastName}
- Email √©tudiant : ${booking.studentId.email}
- Mati√®re : ${booking.subjectId.name}
- Date : ${new Date(booking.startTime).toLocaleDateString('fr-FR')}
- Horaire : ${new Date(booking.startTime).toLocaleTimeString('fr-FR')} - ${new Date(booking.endTime).toLocaleTimeString('fr-FR')}
- Dur√©e : ${booking.duration} minutes
- Votre r√©mun√©ration : ${booking.teacherAmount}‚Ç¨

${booking.studentNotes ? `Notes de l'√©tudiant : ${booking.studentNotes}` : ''}

Consultez vos cours sur : ${process.env.BASE_URL}/teacher/bookings

Pr√©parez votre cours et n'h√©sitez pas √† contacter l'√©tudiant si n√©cessaire.
      `
    };

    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email de notification professeur envoy√©: ${result.messageId}`);
    return result;
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'envoi de l\'email au professeur:', error);
    throw error;
  }
};

// Fonction pour envoyer un email de r√©initialisation de mot de passe
export const sendPasswordResetEmail = async (user, resetToken) => {
  try {
    const transporter = initializeTransporter();
    
    const resetUrl = `${process.env.BASE_URL}/reset-password?token=${resetToken}`;
    
    const mailOptions = {
      from: process.env.SMTP_FROM,
      to: user.email,
      subject: 'üîí R√©initialisation de votre mot de passe - Academ',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #7c3aed;">R√©initialisation de votre mot de passe</h2>
          
          <p>Bonjour ${user.firstName} ${user.lastName},</p>
          
          <p>Vous avez demand√© la r√©initialisation de votre mot de passe sur Academ.</p>
          
          <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <p style="margin: 0;">Cliquez sur le bouton ci-dessous pour d√©finir un nouveau mot de passe :</p>
          </div>

          <div style="margin: 30px 0; text-align: center;">
            <a href="${resetUrl}" 
               style="background-color: #7c3aed; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
              R√©initialiser mon mot de passe
            </a>
          </div>

          <div style="background-color: #fef3c7; padding: 15px; border-radius: 8px; margin: 20px 0;">
            <p style="margin: 0; font-size: 14px;">
              <strong>‚ö†Ô∏è Important :</strong> Ce lien expirera dans 1 heure pour des raisons de s√©curit√©.
            </p>
          </div>

          <p style="font-size: 14px; color: #6b7280;">
            Si vous n'avez pas demand√© cette r√©initialisation, vous pouvez ignorer cet email en toute s√©curit√©.
          </p>

          <hr style="margin: 30px 0; border: none; border-top: 1px solid #e5e7eb;">
          
          <p style="color: #6b7280; font-size: 14px;">
            Pour toute question, contactez-nous √† l'adresse : ${process.env.SMTP_FROM}
          </p>
        </div>
      `,
      text: `
R√©initialisation de votre mot de passe

Bonjour ${user.firstName} ${user.lastName},

Vous avez demand√© la r√©initialisation de votre mot de passe sur Academ.

Cliquez sur ce lien pour d√©finir un nouveau mot de passe :
${resetUrl}

Ce lien expirera dans 1 heure pour des raisons de s√©curit√©.

Si vous n'avez pas demand√© cette r√©initialisation, vous pouvez ignorer cet email en toute s√©curit√©.

Pour toute question, contactez-nous √† l'adresse : ${process.env.SMTP_FROM}
      `
    };

    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email de r√©initialisation envoy√©: ${result.messageId}`);
    return result;
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'envoi de l\'email de r√©initialisation:', error);
    throw error;
  }
};