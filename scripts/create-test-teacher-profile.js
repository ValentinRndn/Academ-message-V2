import { connectToDatabase } from '../server/config/database.js';
import Teacher from '../server/models/Teacher.js';
import { findUsers } from '../server/models/userModel.js';

async function createTestTeacherProfiles() {
  try {
    console.log('üîó Connexion √† la base de donn√©es...');
    await connectToDatabase();
    console.log('‚úÖ Connexion √©tablie');

    // R√©cup√©rer tous les utilisateurs professeurs
    console.log('üë®‚Äçüè´ R√©cup√©ration des professeurs...');
    const teachers = await findUsers({ role: 'teacher' });
    console.log(`üìä ${teachers.length} professeurs trouv√©s`);

    if (teachers.length === 0) {
      console.log('‚ùå Aucun professeur trouv√©. Cr√©ez d\'abord des utilisateurs professeurs.');
      return;
    }

    // Donn√©es de test pour les profils
    const testProfiles = [
      {
        bio: "Professeur passionn√© de math√©matiques avec plus de 8 ans d'exp√©rience. J'aime rendre les math√©matiques accessibles et amusantes pour tous les niveaux. Sp√©cialis√© en alg√®bre, g√©om√©trie et calcul diff√©rentiel.",
        hourlyRate: 45,
        languages: ['french', 'english'],
        experience: 8,
        avatar: 'https://randomuser.me/api/portraits/men/32.jpg'
      },
      {
        bio: "Enseignante en sciences avec une approche pratique et exp√©rimentale. J'encourage mes √©tudiants √† d√©velopper leur esprit critique et leur curiosit√© scientifique. Cours de physique, chimie et biologie.",
        hourlyRate: 50,
        languages: ['french', 'english', 'spanish'],
        experience: 12,
        avatar: 'https://randomuser.me/api/portraits/women/44.jpg'
      },
      {
        bio: "Professeur de langues polyglotte avec une m√©thode d'apprentissage interactive. Je privil√©gie la conversation et l'immersion culturelle pour un apprentissage efficace et naturel.",
        hourlyRate: 40,
        languages: ['french', 'english', 'german', 'italian'],
        experience: 6,
        avatar: 'https://randomuser.me/api/portraits/men/67.jpg'
      },
      {
        bio: "Enseignant en informatique sp√©cialis√© dans la programmation et le d√©veloppement web. J'aide mes √©tudiants √† ma√Ætriser les technologies modernes avec des projets pratiques.",
        hourlyRate: 55,
        languages: ['french', 'english'],
        experience: 10,
        avatar: 'https://randomuser.me/api/portraits/women/23.jpg'
      },
      {
        bio: "Professeur d'histoire et g√©ographie passionn√© par la transmission du savoir. J'utilise des m√©thodes p√©dagogiques vari√©es pour rendre l'histoire vivante et accessible.",
        hourlyRate: 35,
        languages: ['french', 'english'],
        experience: 15,
        avatar: 'https://randomuser.me/api/portraits/men/89.jpg'
      }
    ];

    let updatedCount = 0;
    let createdCount = 0;

    for (let i = 0; i < teachers.length; i++) {
      const teacher = teachers[i];
      const testProfile = testProfiles[i % testProfiles.length];

      try {
        // V√©rifier si un profil Teacher existe d√©j√†
        let teacherProfile = await Teacher.findOne({ userId: teacher._id });

        if (teacherProfile) {
          // Mettre √† jour le profil existant
          console.log(`üîÑ Mise √† jour du profil pour ${teacher.firstName} ${teacher.lastName}...`);
          
          teacherProfile.bio = testProfile.bio;
          teacherProfile.hourlyRate = testProfile.hourlyRate;
          teacherProfile.languages = testProfile.languages;
          teacherProfile.experience = testProfile.experience;
          teacherProfile.avatar = testProfile.avatar;
          
          await teacherProfile.save();
          updatedCount++;
          console.log(`‚úÖ Profil mis √† jour pour ${teacher.firstName} ${teacher.lastName}`);
        } else {
          // Cr√©er un nouveau profil
          console.log(`üÜï Cr√©ation du profil pour ${teacher.firstName} ${teacher.lastName}...`);
          
          const newTeacherProfile = new Teacher({
            userId: teacher._id,
            firstName: teacher.firstName,
            lastName: teacher.lastName,
            email: teacher.email,
            bio: testProfile.bio,
            hourlyRate: testProfile.hourlyRate,
            languages: testProfile.languages,
            experience: testProfile.experience,
            avatar: testProfile.avatar,
            subjects: [], // Sera rempli plus tard
            availability: [], // Sera rempli plus tard
            averageRating: 0,
            reviewCount: 0,
            sessionsCompleted: 0,
            status: 'active'
          });
          
          await newTeacherProfile.save();
          createdCount++;
          console.log(`‚úÖ Profil cr√©√© pour ${teacher.firstName} ${teacher.lastName}`);
        }
      } catch (error) {
        console.error(`‚ùå Erreur pour ${teacher.firstName} ${teacher.lastName}:`, error.message);
      }
    }

    console.log('\nüìä R√©sum√©:');
    console.log(`‚úÖ ${createdCount} profils cr√©√©s`);
    console.log(`üîÑ ${updatedCount} profils mis √† jour`);
    console.log(`üìà Total: ${createdCount + updatedCount} profils trait√©s`);

    // Afficher quelques statistiques
    const totalTeachers = await Teacher.countDocuments();
    console.log(`\nüìà Nombre total de profils Teacher dans la base: ${totalTeachers}`);

    // Afficher quelques exemples de profils cr√©√©s
    const sampleProfiles = await Teacher.find().limit(3);
    console.log('\nüë• Exemples de profils:');
    sampleProfiles.forEach((profile, index) => {
      console.log(`${index + 1}. ${profile.firstName} ${profile.lastName} - ${profile.hourlyRate}‚Ç¨/h - ${profile.experience} ans d'exp√©rience`);
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation des profils de test:', error);
  } finally {
    console.log('\nüèÅ Script termin√©');
    process.exit(0);
  }
}

// Ex√©cuter le script
createTestTeacherProfiles();
